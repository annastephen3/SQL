#In this SQL I worked with a dataset called chinook, which represents a digital media store and includes tables for artists, albums, media tracks, invoices, and customers.

Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to");

#1. SELECT firstname, lastname, customerid, Country
FROM chinook.customers
WHERE country <> 'USA';

#2. Show only the Customers from Brazil;

SELECT * FROM chinook.customers
WHERE country = 'Brazil';

#3. Find the Invoices of customers who are from Brazil;

SELECT cust.firstname, cust.lastname, inv.invoiceid, inv.invoicedate, inv.billingcountry
FROM chinook.invoices inv 
LEFT JOIN chinook.customers cust
ON inv.customerid = cust.customerid 
WHERE inv.billingcountry = 'Brazil';

#4. Show the Employees who are Sales Agents;

SELECT * FROM chinook.Employees
WHERE Title = 'Sales Support Agent';

#5. Find a unique/distinct list of billing countries from the Invoice table;

SELECT distinct billingcountry
FROM chinook.invoices
ORDER BY billingcountry asc;

#6. Provide a query that shows the invoices associated with each sales agent;

SELECT empl.firstname, empl.lastname, inv.invoiceid
FROM chinook.employees empl
JOIN chinook.customers cust
ON empl.employeeid=cust.supportrepid
JOIN chinook.invoices inv
ON cust.customerid=inv.customerid;

#7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers;

SELECT inv.total, cust.firstname, cust.lastname, inv.billingcountry, cust.country, empl.firstname, empl.lastname 
FROM chinook.invoices inv
JOIN chinook.customers cust
ON cust.customerid=inv.customerid
JOIN chinook.employees empl
ON empl.employeeid=cust.supportrepid;

#8. How many Invoices were there in 2009?;

SELECT COUNT(*) FROM chinook.invoices
WHERE invoicedate BETWEEN '2009-01-01' AND '2009-12-31';

#9. What are the total sales for 2009?;

SELECT SUM(total) AS total_sales 
FROM chinook.invoices
WHERE invoicedate BETWEEN '2009-01-01' AND '2009-12-31';

#10. Write a query that includes the purchased track name with each invoice line ID.;

SELECT t.name, inv.invoicelineid
FROM chinook.tracks t
JOIN chinook.invoice_items inv
ON t.trackid=inv.trackid

#11. Write a query that includes the purchased track name AND artist name with each invoice line ID.;

SELECT ar.name AS Artist, t.Name AS Track, i.InvoiceLineId
FROM chinook.invoice_items i
LEFT JOIN chinook.tracks t
ON t.trackid=i.trackid
INNER JOIN chinook.albums a
ON a.AlbumID=t.AlbumID
LEFT JOIN chinook.artists ar
ON ar.artistid = a.artistid;

#12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre;

SELECT t.Name AS 'Track Name', a.Title AS 'Album Title', m.Name AS 'Media Type', g.Name AS 'Genre'
FROM chinook.tracks t
JOIN chinook.Albums a 
on a.AlbumId = t.AlbumId
JOIN chinook.Media_Types m
on m.MediaTypeId = t.MediaTypeId
JOIN chinook.Genres g
on g.GenreId = t.GenreId;

#13. Show the total sales made by each sales agent;

SELECT ROUND(sum(inv.total),2) AS 'total_sales',
emp.firstname, emp.lastname
FROM chinook.invoices inv
LEFT JOIN chinook.customers cust
ON cust.customerid=inv.customerid
LEFT JOIN chinook.employees emp
ON cust.supportrepid=emp.employeeid
WHERE emp.title = 'Sales Support Agent'
GROUP BY emp.firstname;

#14. Which sales agent made the most dollars in sales in 2009?;

SELECT emp.firstname, emp.lastname,
ROUND(SUM(Inv.total),2) as 'total_sales'
FROM chinook.employees emp
JOIN chinook.customers cust
ON cust.supportrepid=emp.employeeid
JOIN chinook.invoices inv
ON cust.customerid=inv.customerid
WHERE emp.Title = 'Sales Support Agent' 
AND Inv.invoicedate LIKE '2009%'
GROUP BY emp.firstname
ORDER BY (round(sum(inv.total),2)) DESC LIMIT 1;  
